@using System.Globalization
@model BookIndexVM

@{
    ViewData["Title"] = "Books";
}

<div class="container mt-4">
    <h1 class="text-center">Book List</h1>

    @if (!string.IsNullOrEmpty(ViewBag.ErrMsg))
    {
        <div class="alert alert-danger">@ViewBag.ErrMsg</div>
    }

    @if (ViewBag.Role == "Admin")
    {
        <p class="text-right">
            <a asp-action="Create" class="btn btn-primary">Create New Book</a>
        </p>
    }

    <div>
        <form asp-action="Index" asp-route-itemPerPage="@Model.ItemPerPage">
            <input asp-for="@Model.Search" />
            <input type="submit" value="Search" />
        </form>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <colgroup>
                <col style="width: 20%;" /> <!-- Product Name -->
                <col style="width: 15%;" /> <!-- Weight -->
                <col style="width: 15%;" /> <!-- Unit Price -->
                <col style="width: 15%;" /> <!-- Unit in Stock -->
                <col style="width: 20%;" /> <!-- Category -->
                <col style="width: 15%;" /> <!-- Action -->
            </colgroup>
            <thead class="thead-dark">
                <tr>
                    <th>Book Name</th>
                    <th>Title</th>
                    <th>Type</th>
                    <th>Price</th>
                    <th>Advance</th>
                    <th>Royalty</th>
                    <th>YtdSales</th>
                    <th>Notes</th>
                    <th>PublishedDate</th>
                    <th>Publisher</th>
                    
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Books)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.bookname)</td>
                        <td>@Html.DisplayFor(modelItem => item.title)</td>
                        <td>@Html.DisplayFor(modelItem => item.type)</td>
                        <td>@Html.DisplayFor(modelItem => item.price)</td>
                        <td>@Html.DisplayFor(modelItem => item.advance)</td>
                        <td>@Html.DisplayFor(modelItem => item.royalty)</td>
                        <td>@Html.DisplayFor(modelItem => item.ytd_sales)</td>
                        <td>@Html.DisplayFor(modelItem => item.notes)</td>
                        <td>@Html.DisplayFor(modelItem => item.published_date)</td>
                        <td>@Html.DisplayFor(modelItem => item.Publisher.publisher_name)</td>
                        <td>
                            @if (ViewBag.Role == "Admin")
                            {
                                <a asp-action="Edit" asp-route-id="@item.book_id" class="btn btn-primary btn-sm">Edit</a>
                                <a asp-action="Details" asp-route-id="@item.book_id" class="btn btn-info btn-sm">Details</a>
                                <a asp-action="Delete" asp-route-id="@item.book_id" class="btn btn-danger btn-sm">Delete</a>
                            }
                            
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @if (Model.TotalPage > 1)
        {
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @for (int i = 1; i <= Model.TotalPage; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link" asp-action="Index" asp-route-search="@Model.Search" asp-route-pageIndex="@i" asp-route-itemPerPage="@Model.ItemPerPage">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        }
        <form asp-action="Index" asp-route-search="@Model.Search" asp-route-pageIndex="@Model.PageIndex">
            <select asp-for="@Model.ItemPerPage" onchange="this.form.submit()">
                <option value="1">1</option>
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="20">20</option>
            </select>
        </form>
        <p>Total Values: @Model.TotalValues</p>
    </div>
</div>