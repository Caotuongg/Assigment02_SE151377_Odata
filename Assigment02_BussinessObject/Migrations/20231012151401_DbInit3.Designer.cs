// <auto-generated />
using System;
using Assigment02_BussinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assigment02_BussinessObject.Migrations
{
    [DbContext(typeof(eBookStoreDBContext))]
    [Migration("20231012151401_DbInit3")]
    partial class DbInit3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Assigment02_BussinessObject.Author", b =>
                {
                    b.Property<int>("author_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("author_id"), 1L, 1);

                    b.Property<string>("address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("city")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("email_address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("state")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("zip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("author_id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Assigment02_BussinessObject.Book", b =>
                {
                    b.Property<int>("book_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("book_id"), 1L, 1);

                    b.Property<int?>("Publisherpub_id")
                        .HasColumnType("int");

                    b.Property<double?>("advance")
                        .HasColumnType("float");

                    b.Property<string>("bookname")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double?>("price")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int>("pub_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("published_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("royalty")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<double?>("ytd_sales")
                        .HasColumnType("float");

                    b.HasKey("book_id");

                    b.HasIndex("Publisherpub_id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Assigment02_BussinessObject.BookAuthor", b =>
                {
                    b.Property<int?>("book_id")
                        .HasColumnType("int");

                    b.Property<int?>("author_id")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("author_order")
                        .HasColumnType("datetime2");

                    b.Property<double?>("royalty_percentage")
                        .HasColumnType("float");

                    b.HasKey("book_id", "author_id");

                    b.HasIndex("author_id");

                    b.ToTable("BookAuthors");
                });

            modelBuilder.Entity("Assigment02_BussinessObject.Publisher", b =>
                {
                    b.Property<int>("pub_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pub_id"), 1L, 1);

                    b.Property<string>("city")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("publisher_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("state")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("pub_id");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("Assigment02_BussinessObject.Role", b =>
                {
                    b.Property<int>("role_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("role_Id"), 1L, 1);

                    b.Property<string>("role_desc")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("role_Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Assigment02_BussinessObject.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"), 1L, 1);

                    b.Property<string>("email_address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("hire_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("middle_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("pub_id")
                        .HasColumnType("int");

                    b.Property<int?>("role_id")
                        .HasColumnType("int");

                    b.Property<string>("source")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.HasIndex("pub_id");

                    b.HasIndex("role_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Assigment02_BussinessObject.Book", b =>
                {
                    b.HasOne("Assigment02_BussinessObject.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("Publisherpub_id");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Assigment02_BussinessObject.BookAuthor", b =>
                {
                    b.HasOne("Assigment02_BussinessObject.Author", "Author")
                        .WithMany("BookAuthor")
                        .HasForeignKey("author_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assigment02_BussinessObject.Book", "Book")
                        .WithMany("BookAuthor")
                        .HasForeignKey("book_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Assigment02_BussinessObject.User", b =>
                {
                    b.HasOne("Assigment02_BussinessObject.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("pub_id");

                    b.HasOne("Assigment02_BussinessObject.Role", "Role")
                        .WithMany()
                        .HasForeignKey("role_id");

                    b.Navigation("Publisher");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Assigment02_BussinessObject.Author", b =>
                {
                    b.Navigation("BookAuthor");
                });

            modelBuilder.Entity("Assigment02_BussinessObject.Book", b =>
                {
                    b.Navigation("BookAuthor");
                });

            modelBuilder.Entity("Assigment02_BussinessObject.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
